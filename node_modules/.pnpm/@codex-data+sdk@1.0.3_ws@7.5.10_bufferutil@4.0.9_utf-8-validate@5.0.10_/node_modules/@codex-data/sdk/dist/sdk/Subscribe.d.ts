import { ExecutionResult, Sink } from "graphql-ws";
import { OnBarsUpdatedSubscription, OnBarsUpdatedSubscriptionVariables, OnDetailedStatsUpdatedSubscription, OnDetailedStatsUpdatedSubscriptionVariables, OnEventLabelCreatedSubscription, OnEventLabelCreatedSubscriptionVariables, OnEventsCreatedSubscription, OnEventsCreatedSubscriptionVariables, OnLatestPairUpdatedSubscription, OnLatestPairUpdatedSubscriptionVariables, OnLatestTokensSubscription, OnLatestTokensSubscriptionVariables, OnNftAssetsCreatedSubscription, OnNftAssetsCreatedSubscriptionVariables, OnNftEventsCreatedSubscription, OnNftEventsCreatedSubscriptionVariables, OnNftPoolEventsCreatedSubscription, OnNftPoolEventsCreatedSubscriptionVariables, OnPairMetadataUpdatedSubscription, OnPairMetadataUpdatedSubscriptionVariables, OnPricesUpdatedSubscription, OnPricesUpdatedSubscriptionVariables, OnPriceUpdatedSubscription, OnPriceUpdatedSubscriptionVariables, OnSimulateTokenContractSubscription, OnSimulateTokenContractSubscriptionVariables, OnTokenBarsUpdatedSubscription, OnTokenBarsUpdatedSubscriptionVariables, OnTokenEventsCreatedSubscription, OnTokenEventsCreatedSubscriptionVariables, OnTokenLifecycleEventsCreatedSubscription, OnTokenLifecycleEventsCreatedSubscriptionVariables, OnUnconfirmedBarsUpdatedSubscription, OnUnconfirmedBarsUpdatedSubscriptionVariables, OnUnconfirmedEventsCreatedSubscription, OnUnconfirmedEventsCreatedSubscriptionVariables } from "./generated/graphql";
import { Codex } from "./index";
export declare class Subscribe {
    private sdk;
    constructor(sdk: Codex);
    onPriceUpdated: (vars: OnPriceUpdatedSubscriptionVariables, sink: Sink<ExecutionResult<OnPriceUpdatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onLatestPairUpdated: (vars: OnLatestPairUpdatedSubscriptionVariables, sink: Sink<ExecutionResult<OnLatestPairUpdatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onTokenBarsUpdated: (vars: OnTokenBarsUpdatedSubscriptionVariables, sink: Sink<ExecutionResult<OnTokenBarsUpdatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onPairMetadataUpdated: (vars: OnPairMetadataUpdatedSubscriptionVariables, sink: Sink<ExecutionResult<OnPairMetadataUpdatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onUnconfirmedBarsUpdated: (vars: OnUnconfirmedBarsUpdatedSubscriptionVariables, sink: Sink<ExecutionResult<OnUnconfirmedBarsUpdatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onTokenLifecycleEventsCreated: (vars: OnTokenLifecycleEventsCreatedSubscriptionVariables, sink: Sink<ExecutionResult<OnTokenLifecycleEventsCreatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onTokenEventsCreated: (vars: OnTokenEventsCreatedSubscriptionVariables, sink: Sink<ExecutionResult<OnTokenEventsCreatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onNftAssetsCreated: (vars: OnNftAssetsCreatedSubscriptionVariables, sink: Sink<ExecutionResult<OnNftAssetsCreatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onUnconfirmedEventsCreated: (vars: OnUnconfirmedEventsCreatedSubscriptionVariables, sink: Sink<ExecutionResult<OnUnconfirmedEventsCreatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onSimulateTokenContract: (vars: OnSimulateTokenContractSubscriptionVariables, sink: Sink<ExecutionResult<OnSimulateTokenContractSubscription>>) => Promise<import("./index").CleanupFunction>;
    onDetailedStatsUpdated: (vars: OnDetailedStatsUpdatedSubscriptionVariables, sink: Sink<ExecutionResult<OnDetailedStatsUpdatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onNftEventsCreated: (vars: OnNftEventsCreatedSubscriptionVariables, sink: Sink<ExecutionResult<OnNftEventsCreatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onPricesUpdated: (vars: OnPricesUpdatedSubscriptionVariables, sink: Sink<ExecutionResult<OnPricesUpdatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onLatestTokens: (vars: OnLatestTokensSubscriptionVariables, sink: Sink<ExecutionResult<OnLatestTokensSubscription>>) => Promise<import("./index").CleanupFunction>;
    onEventsCreated: (vars: OnEventsCreatedSubscriptionVariables, sink: Sink<ExecutionResult<OnEventsCreatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onEventLabelCreated: (vars: OnEventLabelCreatedSubscriptionVariables, sink: Sink<ExecutionResult<OnEventLabelCreatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onNftPoolEventsCreated: (vars: OnNftPoolEventsCreatedSubscriptionVariables, sink: Sink<ExecutionResult<OnNftPoolEventsCreatedSubscription>>) => Promise<import("./index").CleanupFunction>;
    onBarsUpdated: (vars: OnBarsUpdatedSubscriptionVariables, sink: Sink<ExecutionResult<OnBarsUpdatedSubscription>>) => Promise<import("./index").CleanupFunction>;
}
//# sourceMappingURL=Subscribe.d.ts.map