import VariableOptions from "gql-query-builder/build/VariableOptions";
type SchemaTypeDefinition = {
    kind: "NON_NULL" | "SCALAR" | "LIST" | "OBJECT" | "INPUT_OBJECT" | "ENUM" | "UNION" | undefined | null;
    name?: string | null;
    ofType?: SchemaTypeDefinition | null;
    isDeprecated?: boolean | null;
};
type SchemaType = {
    name: string;
    description?: string | null;
    type: SchemaTypeDefinition;
    isDeprecated?: boolean | null;
    possibleTypes?: SchemaType[];
    fields?: SchemaType[];
};
type Fields = Array<string | {
    [key: string]: Fields;
}>;
export declare const getLeafType: (type: SchemaTypeDefinition, allTypes: SchemaType[], result: Fields, currentName: string, level?: number) => Fields;
export declare const getLeafArgs: (type: SchemaTypeDefinition, result: VariableOptions) => VariableOptions;
export declare function parseVariables(args: SchemaType[]): {
    type?: string | undefined;
    name?: string | undefined;
    value: any;
    list?: boolean | [boolean] | undefined;
    required?: boolean | undefined;
} | {
    [x: string]: any;
};
export {};
//# sourceMappingURL=generateGraphql.d.ts.map